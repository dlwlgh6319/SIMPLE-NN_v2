generating ./simple_nn_v2/features/symmetry_function/_libsymf.cpp
(already up-to-date)
the current directory is '/home/gasplant63/refac/Test_v2/test_sm'
running build_ext
building 'simple_nn_v2.features.symmetry_function._libsymf' extension
gcc -pthread -B /home/gasplant63/anaconda3/envs/pytorch/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -Isimple_nn_v2/features/symmetry_function/ -I/home/gasplant63/anaconda3/envs/pytorch/include/python3.7m -c simple_nn_v2/features/symmetry_function/_libsymf.cpp -o ./simple_nn_v2/features/symmetry_function/_libsymf.o
gcc -pthread -B /home/gasplant63/anaconda3/envs/pytorch/compiler_compat -Wl,--sysroot=/ -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -fPIC -Isimple_nn_v2/features/symmetry_function/ -I/home/gasplant63/anaconda3/envs/pytorch/include/python3.7m -c simple_nn_v2/features/symmetry_function/calculate_sf.cpp -o ./simple_nn_v2/features/symmetry_function/calculate_sf.o
g++ -pthread -shared -B /home/gasplant63/anaconda3/envs/pytorch/compiler_compat -L/home/gasplant63/anaconda3/envs/pytorch/lib -Wl,-rpath=/home/gasplant63/anaconda3/envs/pytorch/lib -Wl,--no-as-needed -Wl,--sysroot=/ ./simple_nn_v2/features/symmetry_function/_libsymf.o ./simple_nn_v2/features/symmetry_function/calculate_sf.o -o ./simple_nn_v2/features/symmetry_function/_libsymf.cpython-37m-x86_64-linux-gnu.so
data1.pickle
data2.pickle
data3.pickle
data4.pickle
data5.pickle
data6.pickle
data7.pickle
data8.pickle
Checking parameters to use
INPUTS
params    : {'Ge': 'params_Ge', 'Sb': 'params_Sb', 'Te': 'params_Te'}
refdata_format    : vasp-out
compress_outcar    : True
data_per_tfrecord    : 6000
valid_rate    : 0.1
shuffle    : True
add_NNP_ref    : False
remain_pickle    : True
continue    : False
add_atom_idx    : True
num_parallel_calls    : 40
atomic_weights    : {'type': None, 'params': {}}
weight_modifier    : {'type': None, 'params': {}}
scale_type    : minmax
scale_scale    : 1.0
scale_rho    : None

STRUCTURE_LIST   :  ./str_list
PICKLE_LIST   : ./pickle_list
Checking parameters DONE

Datagenerator.__init__() test
inputs                :   {'params': {'Ge': 'params_Ge', 'Sb': 'params_Sb', 'Te': 'params_Te'}, 'refdata_format': 'vasp-out', 'compress_outcar': True, 'data_per_tfrecord': 6000, 'valid_rate': 0.1, 'shuffle': True, 'add_NNP_ref': False, 'remain_pickle': True, 'continue': False, 'add_atom_idx': True, 'num_parallel_calls': 40, 'atomic_weights': {'type': None, 'params': {}}, 'weight_modifier': {'type': None, 'params': {}}, 'scale_type': 'minmax', 'scale_scale': 1.0, 'scale_rho': None}
structure_list        :   ./str_list
pickle_list           :   ./pickle_list
data_dir              :   ./data
_is_pickle_list_open  :   False
_data_idx             :   0
parent                :   <simple_nn_v2.Simple_nn object at 0x7f5b6c0e6410>
Datagenerator.__init__() OK

Datagenerator.parse_structure_list() test
structures   : [['./generate/OUTCAR_1', '::3'], ['./generate/OUTCAR_11', '::'], ['./generate/OUTCAR_111', '::']]
structure_tag_idx   : [1, 2, 3]
structure_tags   : ['None', 'OUTCAR1', 'OUTCAR2', 'OUTCAR3']
structure_weights   : [1.0, 1.0, 3.0, 3.0]
Datagenerator.parse_structure_list() OK

Datagenerator._get_tag_and_weight() test
Main text   :   OUTCAR1
Tag         :  OUTCAR1
Weight      :   1.0

Main text   :   OUTCAR2:3
Tag         :  OUTCAR2
Weight      :   3.0

Main text   :   OUTCAR3 : 3
Tag         :  OUTCAR3
Weight      :   3.0

Datagenerator._get_tag_and_weight() OK

Datagenerator.load_snapshots() test
Main structure  :    ['./generate/OUTCAR_1', '::3']
Snapshot        :   [Atoms(symbols='Ge16Sb16Te40', pbc=False, cell=[[13.706125017, 0.0, 0.0], [0.015923887, 13.762834119, 0.0], [0.009275429, 0.035993874, 12.211704864]], calculator=SinglePointDFTCalculator(...))]

Main structure  :    ['./generate/OUTCAR_11', '::']
Snapshot        :   [Atoms(symbols='Ge16Sb16Te40', pbc=False, cell=[[13.951083069, 0.0, 0.0], [0.065479256, 13.943431987, 0.0], [-0.077608478, 0.003936046, 12.25258281]], calculator=SinglePointDFTCalculator(...))]

Main structure  :    ['./generate/OUTCAR_111', '::']
Snapshot        :   [Atoms(symbols='Ge16Sb16Te40', pbc=False, cell=[[13.585560727, 0.0, 0.0], [0.939933049, 14.292467961, 0.0], [-0.135148621, 0.374592518, 12.467042538]], calculator=SinglePointDFTCalculator(...))]

Datagenerator.load_snapshots() OK

Datagenerator.save_to_pickle() test
Test dictrionary data  {'TMP': 2, 'DATA': 5}
Tag_index  1
Tmp_filename    : ./data/data1.pickle
Datagenerator.save_to_pickle() OK

Datagenerator._check_exist_data() test
Test save_dir  =./tmp_dir
Before _data_idx               :  1
Afert _data_idx (nonexist path)   : 2
Files in ./tmp_dir
Afert _data_idx (exist path): 3
Datagenerator._check_exist_data() OK

